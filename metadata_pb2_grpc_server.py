# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import metadata_pb2 as metadata__pb2


class MetadataServiceStub(object):
  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SearchIndividuals = channel.unary_unary(
        '/metadata.MetadataService/SearchIndividuals',
        request_serializer=metadata__pb2.SearchIndividualsRequest.SerializeToString,
        response_deserializer=metadata__pb2.SearchIndividualsResponse.FromString,
        )
    self.SearchBiosamples = channel.unary_unary(
        '/metadata.MetadataService/SearchBiosamples',
        request_serializer=metadata__pb2.SearchBiosamplesRequest.SerializeToString,
        response_deserializer=metadata__pb2.SearchBiosamplesResponse.FromString,
        )
    self.GetIndividual = channel.unary_unary(
        '/metadata.MetadataService/GetIndividual',
        request_serializer=metadata__pb2.GetIndividualRequest.SerializeToString,
        response_deserializer=metadata__pb2.Individual.FromString,
        )
    self.GetBiosample = channel.unary_unary(
        '/metadata.MetadataService/GetBiosample',
        request_serializer=metadata__pb2.GetBiosampleRequest.SerializeToString,
        response_deserializer=metadata__pb2.Biosample.FromString,
        )
    self.PutIndividual = channel.unary_unary(
        '/metadata.MetadataService/PutIndividual',
        request_serializer=metadata__pb2.Individual.SerializeToString,
        response_deserializer=metadata__pb2.PutIndividualResponse.FromString,
        )
    self.PutBiosample = channel.unary_unary(
        '/metadata.MetadataService/PutBiosample',
        request_serializer=metadata__pb2.Biosample.SerializeToString,
        response_deserializer=metadata__pb2.PutBiosampleResponse.FromString,
        )


class MetadataServiceServicer(object):
  def __init__(self):
    self.LAST = {}
    self.INDIVIDUALS = {}
    self.BIOSAMPLES = {}
    self.LAST['individual'] = 0
    self.LAST['biosample'] = 0

  def SearchIndividuals(self, request, context):
    inds = metadata__pb2.SearchIndividualsResponse()
    for ind_key in self.INDIVIDUALS.keys():
      inds.individuals.extend([self.INDIVIDUALS[ind_key]])
    return inds

  def SearchBiosamples(self, request, context):
    samps = metadata__pb2.SearchBiosamplesResponse()
    for samp_key in self.BIOSAMPLES.keys():
        samps.biosamples.extend([self.BIOSAMPLES[samp_key]])
    return samps

  def GetIndividual(self, request, context):
    individual_id = request.individual_id
    if individual_id in self.INDIVIDUALS:
        return self.INDIVIDUALS[individual_id]
    raise KeyError

  def GetBiosample(self, request, context):
    biosample_id = request.biosample_id
    if biosample_id in self.BIOSAMPLES:
        return self.BIOSAMPLES[biosample_id]
    raise KeyError

  def PutIndividual(self, request, context):
    individual = request
    self.LAST['individual'] += 1
    newid = self.LAST['individual']
    individual.id = str(newid)
    self.INDIVIDUALS[newid] = individual

    return metadata__pb2.PutIndividualResponse(id=str(newid), success=True)

  def PutBiosample(self, request, context):
    biosample = request
    self.LAST['biosample'] += 1
    newid = self.LAST['biosample']
    biosample.id = str(newid)
    self.BIOSAMPLES[newid] = biosample

    return metadata__pb2.PutBiosampleResponse(id=str(newid), success=True)


def add_MetadataServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SearchIndividuals': grpc.unary_unary_rpc_method_handler(
          servicer.SearchIndividuals,
          request_deserializer=metadata__pb2.SearchIndividualsRequest.FromString,
          response_serializer=metadata__pb2.SearchIndividualsResponse.SerializeToString,
      ),
      'SearchBiosamples': grpc.unary_unary_rpc_method_handler(
          servicer.SearchBiosamples,
          request_deserializer=metadata__pb2.SearchBiosamplesRequest.FromString,
          response_serializer=metadata__pb2.SearchBiosamplesResponse.SerializeToString,
      ),
      'GetIndividual': grpc.unary_unary_rpc_method_handler(
          servicer.GetIndividual,
          request_deserializer=metadata__pb2.GetIndividualRequest.FromString,
          response_serializer=metadata__pb2.Individual.SerializeToString,
      ),
      'GetBiosample': grpc.unary_unary_rpc_method_handler(
          servicer.GetBiosample,
          request_deserializer=metadata__pb2.GetBiosampleRequest.FromString,
          response_serializer=metadata__pb2.Biosample.SerializeToString,
      ),
      'PutIndividual': grpc.unary_unary_rpc_method_handler(
          servicer.PutIndividual,
          request_deserializer=metadata__pb2.Individual.FromString,
          response_serializer=metadata__pb2.PutIndividualResponse.SerializeToString,
      ),
      'PutBiosample': grpc.unary_unary_rpc_method_handler(
          servicer.PutBiosample,
          request_deserializer=metadata__pb2.Biosample.FromString,
          response_serializer=metadata__pb2.PutBiosampleResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'metadata.MetadataService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
